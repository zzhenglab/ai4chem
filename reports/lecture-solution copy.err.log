Traceback (most recent call last):
  File "c:\users\52377\appdata\local\programs\python\python38\lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\52377\appdata\local\programs\python\python38\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "c:\users\52377\appdata\local\programs\python\python38\lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\users\52377\appdata\local\programs\python\python38\lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "c:\users\52377\appdata\local\programs\python\python38\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "c:\users\52377\appdata\local\programs\python\python38\lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "c:\users\52377\appdata\local\programs\python\python38\lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "c:\users\52377\appdata\local\programs\python\python38\lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df_reg = df[["MolWt","LogP","TPSA","NumRings","Melting Point"]].dropna()
X = df_reg[["MolWt","LogP","TPSA","NumRings"]].values
y = df_reg["Melting Point"].values
Xtr, Xte, ytr, yte = train_test_split(X, y, test_size=0.2, random_state=7)

pipe = Pipeline([
    ("scaler", StandardScaler()),
    ("mlp", MLPRegressor(hidden_layer_sizes=(32,), activation="relu",
                         alpha=1e-3, learning_rate_init=0.01,
                         max_iter=1500, random_state=0))
]).fit(Xtr, ytr)

yhat = pipe.predict(Xte)
print(f"MSE={mean_squared_error(yte,yhat):.2f}  MAE={mean_absolute_error(yte,yhat):.2f}  R2={r2_score(yte,yhat):.3f}")

plt.figure(figsize=(4.5,4))
plt.scatter(yte, yhat, alpha=0.65)
lims = [min(yte.min(), yhat.min()), max(yte.max(), yhat.max())]
plt.plot(lims, lims, "k--")
plt.xlabel("True MP"); plt.ylabel("Pred MP"); plt.title("Q1 parity")
plt.show()
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[1], line 1[0m
[1;32m----> 1[0m df_reg [38;5;241m=[39m [43mdf[49m[[[38;5;124m"[39m[38;5;124mMolWt[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124mLogP[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124mTPSA[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124mNumRings[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124mMelting Point[39m[38;5;124m"[39m]][38;5;241m.[39mdropna()
[0;32m      2[0m X [38;5;241m=[39m df_reg[[[38;5;124m"[39m[38;5;124mMolWt[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124mLogP[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124mTPSA[39m[38;5;124m"[39m,[38;5;124m"[39m[38;5;124mNumRings[39m[38;5;124m"[39m]][38;5;241m.[39mvalues
[0;32m      3[0m y [38;5;241m=[39m df_reg[[38;5;124m"[39m[38;5;124mMelting Point[39m[38;5;124m"[39m][38;5;241m.[39mvalues

[1;31mNameError[0m: name 'df' is not defined

