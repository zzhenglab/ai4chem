Traceback (most recent call last):
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
if Chem is not None:
    import pandas as pd
    rows = []
    names = ["caffeine", "acetaminophen", "ibuprofen"]
    for nm in names:
        info = pubchem_by_name(nm)
        smi = info["smiles"]
        m = Chem.MolFromSmiles(smi)
        rows.append({
            "name": nm,
            "smiles": smi,
            "MolWt": Descriptors.MolWt(m),
            "LogP": Crippen.MolLogP(m),
            "HBD": rdMolDescriptors.CalcNumHBD(m),
            "HBA": rdMolDescriptors.CalcNumHBA(m),
            "TPSA": rdMolDescriptors.CalcTPSA(m)
        })
    pd.DataFrame(rows)
else:
    print("RDKit is not available here.")
------------------


[31m---------------------------------------------------------------------------[39m
[31mHTTPError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[23][39m[32m, line 6[39m
[32m      4[39m names = [[33m"[39m[33mcaffeine[39m[33m"[39m, [33m"[39m[33macetaminophen[39m[33m"[39m, [33m"[39m[33mibuprofen[39m[33m"[39m]
[32m      5[39m [38;5;28;01mfor[39;00m nm [38;5;129;01min[39;00m names:
[32m----> [39m[32m6[39m     info = [43mpubchem_by_name[49m[43m([49m[43mnm[49m[43m)[49m
[32m      7[39m     smi = info[[33m"[39m[33msmiles[39m[33m"[39m]
[32m      8[39m     m = Chem.MolFromSmiles(smi)

[36mCell[39m[36m [39m[32mIn[10][39m[32m, line 5[39m, in [36mpubchem_by_name[39m[34m(name, isomeric)[39m
[32m      3[39m kind = [33m"[39m[33mIsomericSMILES[39m[33m"[39m [38;5;28;01mif[39;00m isomeric [38;5;28;01melse[39;00m [33m"[39m[33mCanonicalSMILES[39m[33m"[39m
[32m      4[39m smi_url = [33mf[39m[33m"[39m[33mhttps://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/[39m[38;5;132;01m{[39;00menc[38;5;132;01m}[39;00m[33m/property/[39m[38;5;132;01m{[39;00mkind[38;5;132;01m}[39;00m[33m/TXT[39m[33m"[39m
[32m----> [39m[32m5[39m smiles = [43msafe_get_text[49m[43m([49m[43msmi_url[49m[43m)[49m
[32m      7[39m cid_url = [33mf[39m[33m"[39m[33mhttps://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/[39m[38;5;132;01m{[39;00menc[38;5;132;01m}[39;00m[33m/cids/JSON[39m[33m"[39m
[32m      8[39m cid_list = safe_get_json(cid_url).get([33m"[39m[33mIdentifierList[39m[33m"[39m, {}).get([33m"[39m[33mCID[39m[33m"[39m, [])

[36mCell[39m[36m [39m[32mIn[9][39m[32m, line 8[39m, in [36msafe_get_text[39m[34m(url, timeout)[39m
[32m      6[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34msafe_get_text[39m(url, timeout=[32m30[39m):
[32m      7[39m     r = requests.get(url, timeout=timeout)
[32m----> [39m[32m8[39m     [43mr[49m[43m.[49m[43mraise_for_status[49m[43m([49m[43m)[49m
[32m      9[39m     [38;5;28;01mreturn[39;00m r.text.strip()

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\requests\models.py:1026[39m, in [36mResponse.raise_for_status[39m[34m(self)[39m
[32m   1021[39m     http_error_msg = (
[32m   1022[39m         [33mf[39m[33m"[39m[38;5;132;01m{[39;00m[38;5;28mself[39m.status_code[38;5;132;01m}[39;00m[33m Server Error: [39m[38;5;132;01m{[39;00mreason[38;5;132;01m}[39;00m[33m for url: [39m[38;5;132;01m{[39;00m[38;5;28mself[39m.url[38;5;132;01m}[39;00m[33m"[39m
[32m   1023[39m     )
[32m   1025[39m [38;5;28;01mif[39;00m http_error_msg:
[32m-> [39m[32m1026[39m     [38;5;28;01mraise[39;00m HTTPError(http_error_msg, response=[38;5;28mself[39m)

[31mHTTPError[39m: 503 Server Error: PUGREST.ServerBusy for url: https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/ibuprofen/property/IsomericSMILES/TXT

