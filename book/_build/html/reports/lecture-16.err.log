Traceback (most recent call last):
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\52377\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Top 3 recipes per linker so you can see near ties
top3 = (
    summary_df.sort_values(["linker","mean_yield"], ascending=[True, False])
              .groupby("linker")
              .head(3)[cols]
              .reset_index(drop=True)
)
print("Top 3 per linker")
top3
------------------


[31m---------------------------------------------------------------------------[39m
[31mNameError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[17][39m[32m, line 5[39m
[32m      1[39m [38;5;66;03m# Top 3 recipes per linker so you can see near ties[39;00m
[32m      2[39m top3 = (
[32m      3[39m     summary_df.sort_values([[33m"[39m[33mlinker[39m[33m"[39m,[33m"[39m[33mmean_yield[39m[33m"[39m], ascending=[[38;5;28;01mTrue[39;00m, [38;5;28;01mFalse[39;00m])
[32m      4[39m               .groupby([33m"[39m[33mlinker[39m[33m"[39m)
[32m----> [39m[32m5[39m               .head([32m3[39m)[[43mcols[49m]
[32m      6[39m               .reset_index(drop=[38;5;28;01mTrue[39;00m)
[32m      7[39m )
[32m      8[39m [38;5;28mprint[39m([33m"[39m[33mTop 3 per linker[39m[33m"[39m)
[32m      9[39m top3

[31mNameError[39m: name 'cols' is not defined

